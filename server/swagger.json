{
  "openapi": "3.0.0",
  "info": {
    "title": "Movie Review API",
    "version": "1.0.0",
    "description": "API for movie reviews"
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": ["email", "password"]
      },
      "Review": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "movie_id": {
            "type": "integer"
          },
          "rating": {
            "type": "string",
            "enum": ["1", "2", "3", "4", "5"]
          },
          "info": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewReview": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "finnkino_event": {
            "type": "string"
          },
          "rating": {
            "type": "string",
            "enum": ["1", "2", "3", "4", "5"]
          },
          "info": {
            "type": "string"
          }
        },
        "required": ["title", "rating"]
      },
      "UpdateReview": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "string",
            "enum": ["1", "2", "3", "4", "5"]
          },
          "info": {
            "type": "string"
          }
        },
        "required": ["rating"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "owner_id": {
            "type": "integer"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JoinRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "group_id": {
            "type": "integer"
          },
          "request_status": {
            "type": "string",
            "enum": ["pending", "approved", "declined"]
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Movie": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "integer"
          },
          "movie_id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "finnkino_event": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Registration success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully logged out"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or token revoked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{title}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get reviews for a movie",
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Movie title"
          }
        ],
        "responses": {
          "201": {
            "description": "List of reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reviews": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Review"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reviews/new": {
      "post": {
        "tags": ["Reviews"],
        "summary": "Create a new review",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReview"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "review": {
                      "$ref": "#/components/schemas/Review"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Review already exists"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": ["Groups"],
        "summary": "List all groups",
        "responses": {
          "200": {
            "description": "List of groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Groups"],
        "summary": "Create a new group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "$ref": "#/components/schemas/Group"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Group name already exists"
          }
        }
      }
    },
    "/groups/{groupId}": {
      "get": {
        "tags": ["Groups"],
        "summary": "Get group details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group"
          }
        ],
        "responses": {
          "200": {
            "description": "Group details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "$ref": "#/components/schemas/Group"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "delete": {
        "tags": ["Groups"],
        "summary": "Delete a group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Group deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Group deleted"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete group"
          },
          "404": {
            "description": "Group not found"
          }
        }
      }
    },
    "/groups/{groupId}/members": {
      "post": {
        "tags": ["Group Members"],
        "summary": "Add member to group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer"
                  },
                  "isAdmin": {
                    "type": "boolean"
                  }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member added successfully"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Group or user not found"
          },
          "409": {
            "description": "User already a member"
          }
        }
      }
    },
    "/groups/{groupId}/members/{userId}": {
      "delete": {
        "tags": ["Group Members"],
        "summary": "Remove member from group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the user to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Member removed successfully"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Member not found"
          }
        }
      }
    },
    "/groups/{groupId}/join-requests": {
      "get": {
        "tags": ["Join Requests"],
        "summary": "List join requests for a group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group"
          }
        ],
        "responses": {
          "200": {
            "description": "List of join requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requests": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JoinRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "tags": ["Join Requests"],
        "summary": "Create join request",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group"
          }
        ],
        "responses": {
          "201": {
            "description": "Join request created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#/components/schemas/JoinRequest"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Join request already exists"
          }
        }
      }
    },
    "/groups/join-requests/{requestId}": {
      "put": {
        "tags": ["Join Requests"],
        "summary": "Update join request status",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the join request"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["approved", "declined"]
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Join request updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#/components/schemas/JoinRequest"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Request not found"
          }
        }
      }
    },
    "/groups/{groupId}/movies": {
      "get": {
        "tags": ["Group Movies"],
        "summary": "List movies in group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group"
          }
        ],
        "responses": {
          "200": {
            "description": "List of movies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "movies": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Movie"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "post": {
        "tags": ["Group Movies"],
        "summary": "Add movie to group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the group"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "finnkino_event": {
                    "type": "string"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Movie added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "movie": {
                      "$ref": "#/components/schemas/Movie"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Group not found"
          },
          "409": {
            "description": "Movie already in group"
          }
        }
      }
    }
  }
}